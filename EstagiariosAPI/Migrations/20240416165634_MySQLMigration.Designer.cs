// <auto-generated />
using System;
using EstagiariosAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstagiariosAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240416165634_MySQLMigration")]
    partial class MySQLMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EstagiariosAPI.Entities.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BackdropPath")
                        .HasColumnType("longtext");

                    b.Property<int>("IdAPI")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("EstagiariosAPI.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Vistos", b =>
                {
                    b.Property<int>("FilmesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("FilmesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Vistos");
                });

            modelBuilder.Entity("WatchList", b =>
                {
                    b.Property<int>("FilmesWatchListId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioWatchListId")
                        .HasColumnType("int");

                    b.HasKey("FilmesWatchListId", "UsuarioWatchListId");

                    b.HasIndex("UsuarioWatchListId");

                    b.ToTable("WatchList");
                });

            modelBuilder.Entity("EstagiariosAPI.Entities.Usuario", b =>
                {
                    b.HasOne("EstagiariosAPI.Entities.Filme", "Filme")
                        .WithMany("Usuario")
                        .HasForeignKey("FilmeId");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("Vistos", b =>
                {
                    b.HasOne("EstagiariosAPI.Entities.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstagiariosAPI.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WatchList", b =>
                {
                    b.HasOne("EstagiariosAPI.Entities.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmesWatchListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstagiariosAPI.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioWatchListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EstagiariosAPI.Entities.Filme", b =>
                {
                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
